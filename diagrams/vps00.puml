

@startuml vps00

title Vitual Private Cloud

skinparam node {
    BackgroundColor #FFFFD0
    BackgroundColor<<host>> #74a8dc
    BackgroundColor<<containerService>> #cccccc
}

skinparam cloud {
    BackgroundColor<<user>> #69c890
    BackgroundColor<<api>> #f4a24f
}
cloud frontEnd <<user>>{
    [Internet]
}

cloud backEnd <<api>> {
    [podpingWebsocket]
    queue sqs
}
node proxy <<host>> as “Podverse” {
    [Internet] --> HTTP
    [Internet] --> HTTPS

    node webDocker <<containerService>> as “Docker Container WEB” {
        rectangle nginx_proxy
        rectangle webApplication as "Web Application"
        collections podverseAPI as "Podverse API / Podping"
        
    }
}

node dbserver <<host>> as “Podverse Droplet DB” {
    node dbserverDocker <<containerService>> as “Docker Container DB” {
        database PostGreSQL [
            postgres
        ]
        database MariaDB [
            manticore db
        ]
        rectangle manticore
    }
}
node apiWorker <<host>> as “Podverse API Worker” {
    node apiWorkerDocker <<containerService>> as “Docker Container API Worker” {

    collections podverseWorker as "Worker Containers"
    collections runLiveItemListener
    }
}

HTTP --> nginx_proxy
HTTPS --> nginx_proxy
nginx_proxy --> webApplication
nginx_proxy --> podverseAPI

podverseAPI --> PostGreSQL
podverseAPI --> manticore
webApplication --> podverseAPI

manticore --> MariaDB
manticore --> PostGreSQL

runLiveItemListener --> PostGreSQL
runLiveItemListener --> podpingWebsocket
runLiveItemListener --> sqs

PostGreSQL <-- podverseWorker

podverseWorker --> sqs

@enduml
