# BASE CONFIG

indexer {
    mem_limit = 256M
}

source base {
    type = pgsql
    sql_host = podverse_db
    sql_user = postgres
    sql_pass = mysecretpw
    sql_db = postgres
    sql_ranged_throttle = 300
}

# AUTHOR NAME SEARCH

source author_base: base {
    sql_field_string = name
    sql_attr_string = podverse_id
}

source author: author_base {
    sql_query = \
        SELECT \
            int_id, \
            id AS podverse_id, \
            name \
        FROM authors
}

index idx_author {
    source = author
    path = author_name
    dict = keywords
    expand_keywords = 1
    min_infix_len = 2
    charset_table = non_cjk, cjk
    rt_mem_limit = 4G
}

# EPISODE TITLE SEARCH
# NOTE: the episode_export_with_serial_column.csv file must exist (at least an empty placeholder)
# when docker-compose up is run for podverse_manticore, otherwise directories
# will be created in the container instead of the actual files.

source episode_csv: base {
    sql_field_string = title
    sql_attr_string = podverse_id
    sql_attr_uint = pastHourTotalUniquePageviews
    sql_attr_uint = pastDayTotalUniquePageviews
    sql_attr_uint = pastWeekTotalUniquePageviews
    sql_attr_uint = pastMonthTotalUniquePageviews
    sql_attr_uint = pastYearTotalUniquePageviews
    sql_attr_uint = pastAllTimeTotalUniquePageviews
    sql_attr_timestamp = created_date
    sql_query = \
        SELECT \
            id AS podverse_id, \
            title, \
            "pastHourTotalUniquePageviews", \
            "pastDayTotalUniquePageviews", \
            "pastWeekTotalUniquePageviews", \
            "pastMonthTotalUniquePageviews", \
            "pastYearTotalUniquePageviews", \
            "pastAllTimeTotalUniquePageviews", \
            extract(epoch from "pubDate") AS created_date \
        FROM "episodes"
}

index idx_episode {
    source = episode_csv
    path = episode_title
    # docinfo = extern
    dict = keywords
    # mlock = 0
    morphology = none
    charset_table = 0..9, A..Z->a..z, a..z, U+C0->a, U+C1->a, U+C2->a, U+C3->a, U+C4->a, U+C5->a, U+C6->a, U+C7->c,U+E7->c, U+C8->e, U+C9->e, U+CA->e, U+CB->e, U+CC->i, U+CD->i, U+CE->i, U+CF->i, U+D0->d, U+D1->n, U+D2->o, U+D3->o,  U+D4->o, U+D5->o, U+D6->o, U+D8->o, U+D9->u, U+DA->u, U+DB->u, U+DC->u, U+DD->y, U+DE->t, U+DF->s, U+E0->a, U+E1->a, U+E2->a, U+E3->a, U+E4->a, U+E5->a, U+E6->a, U+E7->c,U+E7->c, U+E8->e, U+E9->e, U+EA->e, U+EB->e, U+EC->i, U+ED->i, U+EE->i, U+EF->i, U+F0->d, U+F1->n, U+F2->o, U+F3->o, U+F4->o, U+F5->o, U+F6->o, U+F8->o, U+F9->u, U+FA->u, U+FB->u, U+FC->u, U+FD->y, U+FE->t, U+FF->s, U+142->l, U+105->a,U+107->c,U+119->e,U+142->l,U+144->n,U+0f3->o,U+15b->s,U+17a->z,U+17c->z
    stopwords=af,ar,bg,bn,ca,ckb,cz,da,de,el,en,eo,es,et,eu,fa,fi,fr,ga,gl,hi,he,hr,hu,hy,id,it,ja,ko,la,lt,lv,mr,nl,no,pl,pt,ro,ru,sk,sl,so,st,sv,sw,th,tr,yo,zh,zu
    min_word_len = 3
    min_prefix_len = 0
    min_infix_len = 2
    html_strip = 0
    html_remove_elements = style, script

    access_plain_attrs = mmap
    access_blob_attrs = mmap
}

# index idx_episode_dist1 {
#     # 'distributed' index type MUST be specified
#     type = distributed
#     local = idx_episode
#     agent = localhost:9313:remote1
#     agent = localhost:9314:remote2,remote3
# 	agent_connect_timeout	= 1000
# 	agent_query_timeout		= 3000
# }

# index idx_episode_rt
# {
# 	# 'rt' index type must be specified to use RT index
# 	type			= rt
# 	path			= episode_title_rt
# 	rt_field		= title
# 	rt_field		= content
# 	rt_attr_uint		= gid
# }

# MEDIA_REF TITLE SEARCH

source media_ref_base: base {
    sql_field_string = title
    sql_attr_string = podverse_id
    sql_attr_uint = pastHourTotalUniquePageviews
    sql_attr_uint = pastDayTotalUniquePageviews
    sql_attr_uint = pastWeekTotalUniquePageviews
    sql_attr_uint = pastMonthTotalUniquePageviews
    sql_attr_uint = pastYearTotalUniquePageviews
    sql_attr_uint = pastAllTimeTotalUniquePageviews
    sql_attr_timestamp = created_date
}

source media_ref: media_ref_base {
    sql_query = \
        SELECT \
            int_id, \
            id AS podverse_id, \
            title, \
            "pastHourTotalUniquePageviews", \
            "pastDayTotalUniquePageviews", \
            "pastWeekTotalUniquePageviews", \
            "pastMonthTotalUniquePageviews", \
            "pastYearTotalUniquePageviews", \
            "pastAllTimeTotalUniquePageviews", \
            extract(epoch from "createdAt") AS created_date \
        FROM "mediaRefs"
}

index idx_media_ref {
    source = media_ref
    path = media_ref_title
    dict = keywords
    expand_keywords = 1
    min_infix_len = 2
    charset_table = non_cjk, cjk
    rt_mem_limit = 4G
    stopwords=af,ar,bg,bn,ca,ckb,cz,da,de,el,en,eo,es,et,eu,fa,fi,fr,ga,gl,hi,he,hr,hu,hy,id,it,ja,ko,la,lt,lv,mr,nl,no,pl,pt,ro,ru,sk,sl,so,st,sv,sw,th,tr,yo,zh,zu
}

# PLAYLIST TITLE SEARCH

source playlist_base: base {
    sql_field_string = title
    sql_attr_string = podverse_id
}

source playlist: playlist_base {
    sql_query = \
        SELECT \
            int_id, \
            id AS podverse_id, \
            title \
        FROM playlists
}

index idx_playlist {
    source = playlist
    path = playlist_title
    dict = keywords
    expand_keywords = 1
    min_infix_len = 2
    charset_table = non_cjk, cjk
    rt_mem_limit = 4G
}

# PODCAST TITLE SEARCH

source podcast_base: base {
    sql_field_string = title
    sql_attr_string = podverse_id
    sql_attr_uint = pastHourTotalUniquePageviews
    sql_attr_uint = pastDayTotalUniquePageviews
    sql_attr_uint = pastWeekTotalUniquePageviews
    sql_attr_uint = pastMonthTotalUniquePageviews
    sql_attr_uint = pastYearTotalUniquePageviews
    sql_attr_uint = pastAllTimeTotalUniquePageviews
    sql_attr_timestamp = created_date
}

source podcast: podcast_base {
    sql_query = \
        SELECT \
            int_id, \
            id AS podverse_id, \
            title, \
            "pastHourTotalUniquePageviews", \
            "pastDayTotalUniquePageviews", \
            "pastWeekTotalUniquePageviews", \
            "pastMonthTotalUniquePageviews", \
            "pastYearTotalUniquePageviews", \
            "pastAllTimeTotalUniquePageviews", \
            extract(epoch from "lastEpisodePubDate") AS created_date \
        FROM podcasts
}

index idx_podcast {
    source = podcast
    path = podcasts_title
    dict = keywords
    expand_keywords = 1
    min_infix_len = 2
    charset_table = non_cjk, cjk
    rt_mem_limit = 4G
    stopwords=af,ar,bg,bn,ca,ckb,cz,da,de,el,en,eo,es,et,eu,fa,fi,fr,ga,gl,hi,he,hr,hu,hy,id,it,ja,ko,la,lt,lv,mr,nl,no,pl,pt,ro,ru,sk,sl,so,st,sv,sw,th,tr,yo,zh,zu
}

# SEARCHD CONFIG

searchd {
    listen = 9306:mysql41
    listen = 9308:http
    log = searchd.log
    query_log = query.log
    binlog_path =
    network_timeout = 5
    client_timeout = 300
    # max_children = 30
    persistent_connections_limit = 30
    pid_file = manticoresearch.pid
    seamless_rotate = 1
    preopen_indexes = 1
    unlink_old = 1
    # mva_updates_pool = 1M
    max_packet_size = 8M
    max_filters = 256
    max_filter_values = 4096
    max_batch_queries = 32
    workers = threads
    collation_server = utf8_ci
}
